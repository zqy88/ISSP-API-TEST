{"uid":"f630b67d2a1e3c30","name":"资源发布管理筛选和重置操作","fullName":"test_运营侧#test_40","historyId":"5f4d3fa85bcab2d030f01927e9808baa","time":{"start":1694074822780,"stop":1694074822874,"duration":94},"status":"broken","statusMessage":"TypeError: object of type 'int' has no len()","statusTrace":"@allure.epic(\"运营平台\")\n    @allure.feature(\"内容管理\")\n    @allure.title(\"资源发布管理筛选和重置操作\")\n    def test_40():\n        requests.packages.urllib3.disable_warnings()\n        #筛选\n        res1 = requests.get(URLY + \"api/issp/content/tool/page?r=\" + \"{}\".format(int(round(time.time() * 1000)))+\n                    \"&status=&platform=&toolName=%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95&downloadType=0&current=1&size=15\"\n                     , headers=headers_admin,verify=False)\n        with allure.step(\"筛选结果检查\"):\n            with allure.step(f\"1.字段total检查，预期结果为'接口测试'\"):\n                result = jsonpath.jsonpath(json.loads(res1.text), \"$..data..records..toolName\")[0]\n                assert result == \"接口测试\"\n>               id_len = len(eval(str(jsonpath.jsonpath(json.loads(res1.text), \"$..data..records..id\")[0])))\nE               TypeError: object of type 'int' has no len()\n\ntest_运营侧.py:1348: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TypeError: object of type 'int' has no len()","statusTrace":"@allure.epic(\"运营平台\")\n    @allure.feature(\"内容管理\")\n    @allure.title(\"资源发布管理筛选和重置操作\")\n    def test_40():\n        requests.packages.urllib3.disable_warnings()\n        #筛选\n        res1 = requests.get(URLY + \"api/issp/content/tool/page?r=\" + \"{}\".format(int(round(time.time() * 1000)))+\n                    \"&status=&platform=&toolName=%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95&downloadType=0&current=1&size=15\"\n                     , headers=headers_admin,verify=False)\n        with allure.step(\"筛选结果检查\"):\n            with allure.step(f\"1.字段total检查，预期结果为'接口测试'\"):\n                result = jsonpath.jsonpath(json.loads(res1.text), \"$..data..records..toolName\")[0]\n                assert result == \"接口测试\"\n>               id_len = len(eval(str(jsonpath.jsonpath(json.loads(res1.text), \"$..data..records..id\")[0])))\nE               TypeError: object of type 'int' has no len()\n\ntest_运营侧.py:1348: TypeError","steps":[{"name":"筛选结果检查","time":{"start":1694074822865,"stop":1694074822873,"duration":8},"status":"broken","statusMessage":"TypeError: object of type 'int' has no len()\n","statusTrace":"  File \"E:\\pythonWorkSpace\\api_test_1\\issp\\test_运营侧.py\", line 1348, in test_40\n    id_len = len(eval(str(jsonpath.jsonpath(json.loads(res1.text), \"$..data..records..id\")[0])))\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"1.字段total检查，预期结果为'接口测试'","time":{"start":1694074822865,"stop":1694074822873,"duration":8},"status":"broken","statusMessage":"TypeError: object of type 'int' has no len()\n","statusTrace":"  File \"E:\\pythonWorkSpace\\api_test_1\\issp\\test_运营侧.py\", line 1348, in test_40\n    id_len = len(eval(str(jsonpath.jsonpath(json.loads(res1.text), \"$..data..records..id\")[0])))\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":2,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"运营平台"},{"name":"feature","value":"内容管理"},{"name":"suite","value":"test_运营侧"},{"name":"host","value":"DESKTOP-ORH7286"},{"name":"thread","value":"44332-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_运营侧"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f630b67d2a1e3c30.json","parameterValues":[]}